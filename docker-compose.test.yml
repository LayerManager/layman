version: '3.3'

services:
   layman_test:
      container_name: layman_test
      image: layman_dev:latest
      user: ${UID_GID}
      command: bash test.sh
      env_file:
         - .env.test
      volumes:
        - ./layman_data_test:/layman_data_test
        - ./sample:/code/sample
        - ./src:/code/src
        - ./test:/code/test
        - ./tmp:/code/tmp
        - ./test.sh:/code/test.sh
      depends_on:
        - celery_worker_test
        - timgen
        - layman_client_test

   celery_worker_test:
      image: layman_dev:latest
      user: ${UID_GID}
      # use watchdog
      command: bash -c "cd src && python3 wait_for_deps.py && watchmedo auto-restart -d . -p '*.py' --recursive -- python3 -m celery -Q $${LAYMAN_CELERY_QUEUE} -A layman.celery_app worker --loglevel=info"
      env_file: .env.test
      environment:
        - C_FORCE_ROOT=true
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./layman_data_test:/layman_data_test
        - ./sample:/code/sample
        - ./src:/code/src
        - ./tmp:/code/tmp
      depends_on:
        - redis
        - postgresql
        - geoserver
        - micka

   timgen:
      container_name: timgen
      build:
        context: timgen
        dockerfile: Dockerfile.production
        args:
           - LAYMAN_GS_HOST=${LAYMAN_GS_HOST}
           - LAYMAN_GS_PORT=${LAYMAN_GS_PORT}
           - LAYMAN_SERVER_NAME=${LAYMAN_SERVER_NAME}
      image: timgen:latest
      user: ${UID_GID}
      command: sh -c "node proxy.js & ./node_modules/.bin/http-server dist/"
#      ports:
#        - 8080:8080
#        - 8081:8081

   layman_client_test:
      container_name: layman_client_test
      build:
        context: client
        dockerfile: docker/Dockerfile.production
        args:
           - LAYMAN_CLIENT_VERSION=${LAYMAN_CLIENT_VERSION}
           - LTC_BASEPATH=${LTC_BASEPATH}
      image: layman_client_test:latest
      command: sh -c "npm start"
      env_file:
         - .env.test
      depends_on:
        - redis
