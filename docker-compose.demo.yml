version: '3.3'

services:
   layman:
      container_name: layman
      build:
        context: .
        dockerfile: docker/Dockerfile.production
        args:
           - UID_GID
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "python3 src/layman_flush_redis.py && python3 src/wait_for_deps.py && cd src && gunicorn -w 1 -b 0.0.0.0:8000 layman:app"
      env_file:
         - .env
      volumes:
        - ./layman_data:/layman_data
        - ./src/layman_settings_demo.py:/code/src/layman_settings.py
      depends_on:
        - hslayers
        - layman_client
        - redis
        - postgresql
        - geoserver

   celery_worker:
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "cd src && python3 wait_for_deps.py && python3 -m celery -Q $${LAYMAN_CELERY_QUEUE} -A layman.celery_app worker --loglevel=info"
      env_file: .env
      environment:
        - C_FORCE_ROOT=true
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./layman_data:/layman_data
        - ./src/layman_settings_demo.py:/code/src/layman_settings.py
      depends_on:
        - layman

   flower:
      container_name: flower
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "cd src && python3 wait_for_deps.py && python3 -m flower -A layman.celery_app --port=5555 --url_prefix=flower"
      env_file: .env
      environment:
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./src/layman_settings_demo.py:/code/src/layman_settings.py
      depends_on:
        - celery_worker

   hslayers:
      container_name: hslayers
      build:
        context: hslayers
        dockerfile: Dockerfile.production
        args:
           - LAYMAN_GS_HOST=${LAYMAN_GS_HOST}
           - LAYMAN_GS_PORT=${LAYMAN_GS_PORT}
           - LAYMAN_SERVER_NAME=${LAYMAN_SERVER_NAME}
      image: hslayers:latest
      user: ${UID_GID}
      command: sh -c "node proxy.js & ./node_modules/.bin/http-server dist/"

   layman_client:
      container_name: layman_client
      build:
        context: client
        dockerfile: docker/Dockerfile.production
        args:
           - LAYMAN_CLIENT_VERSION=${LAYMAN_CLIENT_VERSION}
      image: layman_client:latest
      command: sh -c "npm start"
      env_file:
         - .env
      depends_on:
        - redis

   nginx:
      image: nginx:1.16-alpine
      volumes:
        - ./deps/nginx/sample/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
        - 80:80
      depends_on:
        - layman
        - layman_client
        - flower
        - geoserver
