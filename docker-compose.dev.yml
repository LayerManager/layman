version: '3.3'

services:
   layman_dev:
      container_name: layman_dev
      build:
        context: docker/.
        dockerfile: Dockerfile.dev
      image: layman_dev:latest
      user: ${UID_GID}
      command: bash start.sh
      env_file:
         - .env
      ports:
        - 8000:8000
      volumes:
        - ./layman_data:/layman_data
        - ./sample:/code/sample
        - ./src:/code/src
        - ./tmp:/code/tmp
        - ./start.sh:/code/start.sh
        - ./doc:/code/doc
        - ./deps/geoserver/data:/geoserver/data_dir
        - ./deps/geoserver/sample/geoserver_data:/geoserver/initial_data_dir
      depends_on:
        - timgen
        - redis
        - postgresql
        - geoserver
        - layman_client
        - micka

   celery_worker_dev:
      image: layman_dev:latest
      user: ${UID_GID}
      # use watchdog
      command: bash -c "cd src && python3 wait_for_deps.py && watchmedo auto-restart -d . -p '*.py' --recursive -- python3 -m celery -Q $${LAYMAN_CELERY_QUEUE} -A layman.celery_app worker --loglevel=info"
#      command: bash -c "cd src && python3 -m celery -A layman.celery_app worker --loglevel=info"
      env_file: .env
      environment:
        - C_FORCE_ROOT=true
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./layman_data:/layman_data
        - ./sample:/code/sample
        - ./src:/code/src
        - ./tmp:/code/tmp
      depends_on:
        - layman_dev

   flower:
      container_name: flower
      image: layman_dev:latest
      user: ${UID_GID}
      command: bash -c "cd src && python3 wait_for_deps.py && python3 -m flower -A layman.celery_app --port=5555"
      env_file: .env
      environment:
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./layman_data:/layman_data
        - ./sample:/code/sample
        - ./src:/code/src
        - ./tmp:/code/tmp
      ports:
        - 5555:5555
      depends_on:
        - celery_worker_dev

   timgen:
      container_name: timgen
      build:
        context: timgen
        dockerfile: Dockerfile.production
      image: timgen:latest
      user: ${UID_GID}
      command: sh -c "node proxy.js & ./node_modules/.bin/http-server dist/"
#      ports:
#        - 8080:8080
#        - 8081:8081

   layman_client:
      container_name: layman_client
      build:
        context: client
        dockerfile: docker/Dockerfile.production
        args:
           - LAYMAN_CLIENT_VERSION=${LAYMAN_CLIENT_VERSION}
           - LTC_BASEPATH=${LTC_BASEPATH}
      image: layman_client:latest
      command: sh -c "npm start"
      env_file:
         - .env
      ports:
        - 3000:3000
      depends_on:
        - redis

