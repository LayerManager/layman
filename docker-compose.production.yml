version: '3.3'

services:
   layman:
      container_name: layman
      build:
        context: docker/.
        dockerfile: Dockerfile.production
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "bash start.sh --no-reload"
      env_file:
         - .env
      ports:
        - 8000:8000
      volumes:
        - ./layman_data:/layman_data
        - ./src:/code/src
        - ./start.sh:/code/start.sh
      depends_on:
        - hslayers

   celery_worker:
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "cd src && python3 wait_for_deps.py && python3 -m celery -Q $${LAYMAN_CELERY_QUEUE} -A layman.celery_app worker --loglevel=info"
      env_file: .env
      environment:
        - C_FORCE_ROOT=true
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./layman_data:/layman_data
        - ./src:/code/src
      depends_on:
        - layman

   flower:
      container_name: flower
      image: layman:latest
      user: ${UID_GID}
      command: bash -c "cd src && python3 wait_for_deps.py && python3 -m flower -A layman.celery_app --port=5555"
      env_file: .env.dev
      environment:
        - LAYMAN_SKIP_REDIS_LOADING=true
      volumes:
        - ./src:/code/src
      ports:
        - 5555:5555
      depends_on:
        - celery_worker

   hslayers:
      container_name: hslayers
      build:
        context: hslayers
        dockerfile: Dockerfile.production
        args:
           - LAYMAN_GS_HOST=${LAYMAN_GS_HOST}
           - LAYMAN_GS_PORT=${LAYMAN_GS_PORT}
      image: hslayers:latest
      user: ${UID_GID}
      command: sh -c "node proxy.js & ./node_modules/.bin/http-server dist/"
#      env_file:
#         - .env.dev
      ports:
        - 8080:8080
        - 8081:8081
